# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: "Build It"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: latest
          run_install: true

      - name: Use Node.js 20.12.2
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 20.12.2
          cache: "pnpm"

      - name: Build the extension
        run: pnpm build

      - name: Package the extension into a zip artifact
        run: pnpm package

      - name: Extract version from package.json
        id: extract_version
        run: echo ::set-output name=VERSION::$(node -p "require('./package.json').version")

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version.outputs.VERSION }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/chrome-mv3-prod.zip
          asset_name: chrome-mv3-prod.zip
          asset_content_type: application/zip
